// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pubsub/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRemovePublisher struct {
	PublisherDomain string `protobuf:"bytes,1,opt,name=publisher_domain,json=publisherDomain,proto3" json:"publisher_domain,omitempty"`
	Signer          string `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgRemovePublisher) Reset()         { *m = MsgRemovePublisher{} }
func (m *MsgRemovePublisher) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePublisher) ProtoMessage()    {}
func (*MsgRemovePublisher) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{0}
}
func (m *MsgRemovePublisher) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePublisher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePublisher.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePublisher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePublisher.Merge(m, src)
}
func (m *MsgRemovePublisher) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePublisher) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePublisher.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePublisher proto.InternalMessageInfo

func (m *MsgRemovePublisher) GetPublisherDomain() string {
	if m != nil {
		return m.PublisherDomain
	}
	return ""
}

func (m *MsgRemovePublisher) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgRemovePublisherResponse struct {
}

func (m *MsgRemovePublisherResponse) Reset()         { *m = MsgRemovePublisherResponse{} }
func (m *MsgRemovePublisherResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePublisherResponse) ProtoMessage()    {}
func (*MsgRemovePublisherResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{1}
}
func (m *MsgRemovePublisherResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePublisherResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePublisherResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePublisherResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePublisherResponse.Merge(m, src)
}
func (m *MsgRemovePublisherResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePublisherResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePublisherResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePublisherResponse proto.InternalMessageInfo

type MsgAddSubscriber struct {
	Subscriber *Subscriber `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	Signer     string      `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgAddSubscriber) Reset()         { *m = MsgAddSubscriber{} }
func (m *MsgAddSubscriber) String() string { return proto.CompactTextString(m) }
func (*MsgAddSubscriber) ProtoMessage()    {}
func (*MsgAddSubscriber) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{2}
}
func (m *MsgAddSubscriber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSubscriber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSubscriber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSubscriber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSubscriber.Merge(m, src)
}
func (m *MsgAddSubscriber) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSubscriber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSubscriber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSubscriber proto.InternalMessageInfo

func (m *MsgAddSubscriber) GetSubscriber() *Subscriber {
	if m != nil {
		return m.Subscriber
	}
	return nil
}

func (m *MsgAddSubscriber) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgAddSubscriberResponse struct {
}

func (m *MsgAddSubscriberResponse) Reset()         { *m = MsgAddSubscriberResponse{} }
func (m *MsgAddSubscriberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddSubscriberResponse) ProtoMessage()    {}
func (*MsgAddSubscriberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{3}
}
func (m *MsgAddSubscriberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSubscriberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSubscriberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSubscriberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSubscriberResponse.Merge(m, src)
}
func (m *MsgAddSubscriberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSubscriberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSubscriberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSubscriberResponse proto.InternalMessageInfo

type MsgRemoveSubscriber struct {
	SubscriberAddress string `protobuf:"bytes,1,opt,name=subscriber_address,json=subscriberAddress,proto3" json:"subscriber_address,omitempty"`
	Signer            string `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgRemoveSubscriber) Reset()         { *m = MsgRemoveSubscriber{} }
func (m *MsgRemoveSubscriber) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSubscriber) ProtoMessage()    {}
func (*MsgRemoveSubscriber) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{4}
}
func (m *MsgRemoveSubscriber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSubscriber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSubscriber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSubscriber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSubscriber.Merge(m, src)
}
func (m *MsgRemoveSubscriber) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSubscriber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSubscriber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSubscriber proto.InternalMessageInfo

func (m *MsgRemoveSubscriber) GetSubscriberAddress() string {
	if m != nil {
		return m.SubscriberAddress
	}
	return ""
}

func (m *MsgRemoveSubscriber) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgRemoveSubscriberResponse struct {
}

func (m *MsgRemoveSubscriberResponse) Reset()         { *m = MsgRemoveSubscriberResponse{} }
func (m *MsgRemoveSubscriberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSubscriberResponse) ProtoMessage()    {}
func (*MsgRemoveSubscriberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{5}
}
func (m *MsgRemoveSubscriberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSubscriberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSubscriberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSubscriberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSubscriberResponse.Merge(m, src)
}
func (m *MsgRemoveSubscriberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSubscriberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSubscriberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSubscriberResponse proto.InternalMessageInfo

type MsgAddPublisherIntent struct {
	PublisherIntent *PublisherIntent `protobuf:"bytes,1,opt,name=publisher_intent,json=publisherIntent,proto3" json:"publisher_intent,omitempty"`
	Signer          string           `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgAddPublisherIntent) Reset()         { *m = MsgAddPublisherIntent{} }
func (m *MsgAddPublisherIntent) String() string { return proto.CompactTextString(m) }
func (*MsgAddPublisherIntent) ProtoMessage()    {}
func (*MsgAddPublisherIntent) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{6}
}
func (m *MsgAddPublisherIntent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPublisherIntent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPublisherIntent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPublisherIntent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPublisherIntent.Merge(m, src)
}
func (m *MsgAddPublisherIntent) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPublisherIntent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPublisherIntent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPublisherIntent proto.InternalMessageInfo

func (m *MsgAddPublisherIntent) GetPublisherIntent() *PublisherIntent {
	if m != nil {
		return m.PublisherIntent
	}
	return nil
}

func (m *MsgAddPublisherIntent) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgAddPublisherIntentResponse struct {
}

func (m *MsgAddPublisherIntentResponse) Reset()         { *m = MsgAddPublisherIntentResponse{} }
func (m *MsgAddPublisherIntentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddPublisherIntentResponse) ProtoMessage()    {}
func (*MsgAddPublisherIntentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{7}
}
func (m *MsgAddPublisherIntentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPublisherIntentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPublisherIntentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPublisherIntentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPublisherIntentResponse.Merge(m, src)
}
func (m *MsgAddPublisherIntentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPublisherIntentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPublisherIntentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPublisherIntentResponse proto.InternalMessageInfo

type MsgRemovePublisherIntent struct {
	PublisherDomain string `protobuf:"bytes,1,opt,name=publisher_domain,json=publisherDomain,proto3" json:"publisher_domain,omitempty"`
	SubscriptionId  string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Signer          string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgRemovePublisherIntent) Reset()         { *m = MsgRemovePublisherIntent{} }
func (m *MsgRemovePublisherIntent) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePublisherIntent) ProtoMessage()    {}
func (*MsgRemovePublisherIntent) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{8}
}
func (m *MsgRemovePublisherIntent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePublisherIntent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePublisherIntent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePublisherIntent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePublisherIntent.Merge(m, src)
}
func (m *MsgRemovePublisherIntent) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePublisherIntent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePublisherIntent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePublisherIntent proto.InternalMessageInfo

func (m *MsgRemovePublisherIntent) GetPublisherDomain() string {
	if m != nil {
		return m.PublisherDomain
	}
	return ""
}

func (m *MsgRemovePublisherIntent) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *MsgRemovePublisherIntent) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgRemovePublisherIntentResponse struct {
}

func (m *MsgRemovePublisherIntentResponse) Reset()         { *m = MsgRemovePublisherIntentResponse{} }
func (m *MsgRemovePublisherIntentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePublisherIntentResponse) ProtoMessage()    {}
func (*MsgRemovePublisherIntentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{9}
}
func (m *MsgRemovePublisherIntentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePublisherIntentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePublisherIntentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePublisherIntentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePublisherIntentResponse.Merge(m, src)
}
func (m *MsgRemovePublisherIntentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePublisherIntentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePublisherIntentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePublisherIntentResponse proto.InternalMessageInfo

type MsgAddSubscriberIntent struct {
	SubscriberIntent *SubscriberIntent `protobuf:"bytes,1,opt,name=subscriber_intent,json=subscriberIntent,proto3" json:"subscriber_intent,omitempty"`
	Signer           string            `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgAddSubscriberIntent) Reset()         { *m = MsgAddSubscriberIntent{} }
func (m *MsgAddSubscriberIntent) String() string { return proto.CompactTextString(m) }
func (*MsgAddSubscriberIntent) ProtoMessage()    {}
func (*MsgAddSubscriberIntent) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{10}
}
func (m *MsgAddSubscriberIntent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSubscriberIntent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSubscriberIntent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSubscriberIntent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSubscriberIntent.Merge(m, src)
}
func (m *MsgAddSubscriberIntent) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSubscriberIntent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSubscriberIntent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSubscriberIntent proto.InternalMessageInfo

func (m *MsgAddSubscriberIntent) GetSubscriberIntent() *SubscriberIntent {
	if m != nil {
		return m.SubscriberIntent
	}
	return nil
}

func (m *MsgAddSubscriberIntent) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgAddSubscriberIntentResponse struct {
}

func (m *MsgAddSubscriberIntentResponse) Reset()         { *m = MsgAddSubscriberIntentResponse{} }
func (m *MsgAddSubscriberIntentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddSubscriberIntentResponse) ProtoMessage()    {}
func (*MsgAddSubscriberIntentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{11}
}
func (m *MsgAddSubscriberIntentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSubscriberIntentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSubscriberIntentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSubscriberIntentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSubscriberIntentResponse.Merge(m, src)
}
func (m *MsgAddSubscriberIntentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSubscriberIntentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSubscriberIntentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSubscriberIntentResponse proto.InternalMessageInfo

type MsgRemoveSubscriberIntent struct {
	SubscriberAddress string `protobuf:"bytes,1,opt,name=subscriber_address,json=subscriberAddress,proto3" json:"subscriber_address,omitempty"`
	SubscriptionId    string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	PublisherDomain   string `protobuf:"bytes,3,opt,name=publisher_domain,json=publisherDomain,proto3" json:"publisher_domain,omitempty"`
	Signer            string `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgRemoveSubscriberIntent) Reset()         { *m = MsgRemoveSubscriberIntent{} }
func (m *MsgRemoveSubscriberIntent) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSubscriberIntent) ProtoMessage()    {}
func (*MsgRemoveSubscriberIntent) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{12}
}
func (m *MsgRemoveSubscriberIntent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSubscriberIntent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSubscriberIntent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSubscriberIntent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSubscriberIntent.Merge(m, src)
}
func (m *MsgRemoveSubscriberIntent) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSubscriberIntent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSubscriberIntent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSubscriberIntent proto.InternalMessageInfo

func (m *MsgRemoveSubscriberIntent) GetSubscriberAddress() string {
	if m != nil {
		return m.SubscriberAddress
	}
	return ""
}

func (m *MsgRemoveSubscriberIntent) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *MsgRemoveSubscriberIntent) GetPublisherDomain() string {
	if m != nil {
		return m.PublisherDomain
	}
	return ""
}

func (m *MsgRemoveSubscriberIntent) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

type MsgRemoveSubscriberIntentResponse struct {
}

func (m *MsgRemoveSubscriberIntentResponse) Reset()         { *m = MsgRemoveSubscriberIntentResponse{} }
func (m *MsgRemoveSubscriberIntentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSubscriberIntentResponse) ProtoMessage()    {}
func (*MsgRemoveSubscriberIntentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de188e882df4c8a7, []int{13}
}
func (m *MsgRemoveSubscriberIntentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSubscriberIntentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSubscriberIntentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSubscriberIntentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSubscriberIntentResponse.Merge(m, src)
}
func (m *MsgRemoveSubscriberIntentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSubscriberIntentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSubscriberIntentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSubscriberIntentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRemovePublisher)(nil), "pubsub.v1.MsgRemovePublisher")
	proto.RegisterType((*MsgRemovePublisherResponse)(nil), "pubsub.v1.MsgRemovePublisherResponse")
	proto.RegisterType((*MsgAddSubscriber)(nil), "pubsub.v1.MsgAddSubscriber")
	proto.RegisterType((*MsgAddSubscriberResponse)(nil), "pubsub.v1.MsgAddSubscriberResponse")
	proto.RegisterType((*MsgRemoveSubscriber)(nil), "pubsub.v1.MsgRemoveSubscriber")
	proto.RegisterType((*MsgRemoveSubscriberResponse)(nil), "pubsub.v1.MsgRemoveSubscriberResponse")
	proto.RegisterType((*MsgAddPublisherIntent)(nil), "pubsub.v1.MsgAddPublisherIntent")
	proto.RegisterType((*MsgAddPublisherIntentResponse)(nil), "pubsub.v1.MsgAddPublisherIntentResponse")
	proto.RegisterType((*MsgRemovePublisherIntent)(nil), "pubsub.v1.MsgRemovePublisherIntent")
	proto.RegisterType((*MsgRemovePublisherIntentResponse)(nil), "pubsub.v1.MsgRemovePublisherIntentResponse")
	proto.RegisterType((*MsgAddSubscriberIntent)(nil), "pubsub.v1.MsgAddSubscriberIntent")
	proto.RegisterType((*MsgAddSubscriberIntentResponse)(nil), "pubsub.v1.MsgAddSubscriberIntentResponse")
	proto.RegisterType((*MsgRemoveSubscriberIntent)(nil), "pubsub.v1.MsgRemoveSubscriberIntent")
	proto.RegisterType((*MsgRemoveSubscriberIntentResponse)(nil), "pubsub.v1.MsgRemoveSubscriberIntentResponse")
}

func init() { proto.RegisterFile("pubsub/v1/tx.proto", fileDescriptor_de188e882df4c8a7) }

var fileDescriptor_de188e882df4c8a7 = []byte{
	// 568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x8d, 0x09, 0x54, 0xea, 0x45, 0x90, 0x30, 0x55, 0xa2, 0xe0, 0x10, 0x93, 0x26, 0x3c, 0x5a,
	0x01, 0xb6, 0xda, 0x8a, 0x0f, 0x28, 0x02, 0xa9, 0x5d, 0x44, 0x82, 0xb0, 0xa8, 0x54, 0x21, 0x85,
	0x38, 0x1e, 0xb9, 0x83, 0xe2, 0x87, 0x3c, 0xb6, 0xd5, 0xf2, 0x01, 0xac, 0xf9, 0x11, 0xb6, 0x7c,
	0x03, 0xcb, 0x2e, 0x59, 0xa2, 0xe4, 0x47, 0x90, 0x9c, 0xc9, 0x64, 0x6c, 0x8f, 0x9d, 0x64, 0xe9,
	0x7b, 0x8f, 0xcf, 0x39, 0x73, 0xee, 0x5c, 0x1b, 0x90, 0x1f, 0x99, 0x34, 0x32, 0x8d, 0xf8, 0xc8,
	0x08, 0xaf, 0x75, 0x3f, 0xf0, 0x42, 0x0f, 0xed, 0x2e, 0x6a, 0x7a, 0x7c, 0xa4, 0x36, 0x57, 0x6d,
	0x56, 0x4c, 0x20, 0xbd, 0x0b, 0x40, 0x03, 0x6a, 0x0f, 0xb1, 0xe3, 0xc5, 0xf8, 0x63, 0x64, 0x4e,
	0x09, 0xbd, 0xc2, 0x01, 0x3a, 0x84, 0xba, 0xbf, 0x7c, 0x18, 0x59, 0x9e, 0x33, 0x26, 0x6e, 0x4b,
	0xe9, 0x2a, 0x07, 0xbb, 0xc3, 0x1a, 0xaf, 0xbf, 0x4f, 0xca, 0xa8, 0x09, 0x3b, 0x94, 0xd8, 0x2e,
	0x0e, 0x5a, 0x77, 0x12, 0x00, 0x7b, 0xea, 0x3d, 0x01, 0x35, 0x4f, 0x3c, 0xc4, 0xd4, 0xf7, 0x5c,
	0x8a, 0x7b, 0x63, 0xa8, 0x0f, 0xa8, 0x7d, 0x6a, 0x59, 0x9f, 0x23, 0x93, 0x4e, 0x02, 0x62, 0xe2,
	0x00, 0xbd, 0x05, 0xa0, 0xfc, 0x29, 0x91, 0xbb, 0x7f, 0xdc, 0xd0, 0xf9, 0x11, 0xf4, 0x15, 0x74,
	0x28, 0x00, 0x0b, 0x0d, 0xa8, 0xd0, 0xca, 0x4a, 0x70, 0xf9, 0x2f, 0xb0, 0xc7, 0xcd, 0x09, 0x0e,
	0xde, 0x00, 0x5a, 0x11, 0x8f, 0xc6, 0x96, 0x15, 0x60, 0x4a, 0xd9, 0xc1, 0x1f, 0xad, 0x3a, 0xa7,
	0x8b, 0x46, 0xa1, 0x72, 0x07, 0xda, 0x12, 0x76, 0x2e, 0x1e, 0x43, 0x63, 0x61, 0x8c, 0xc7, 0x72,
	0xee, 0x86, 0xd8, 0x0d, 0xd1, 0x07, 0x31, 0x75, 0x92, 0xd4, 0x58, 0x0c, 0xaa, 0x10, 0x43, 0xe6,
	0x2d, 0x61, 0x22, 0x8c, 0xa6, 0xc8, 0xd6, 0x53, 0xe8, 0x48, 0x75, 0xb9, 0xb1, 0x1f, 0x4a, 0x12,
	0x59, 0x66, 0x66, 0x8c, 0x75, 0x8b, 0x2b, 0xf1, 0x12, 0x6a, 0x2c, 0x2c, 0x3f, 0x24, 0x9e, 0x3b,
	0x22, 0x16, 0x73, 0xf2, 0x50, 0x2c, 0x9f, 0x5b, 0x82, 0xd3, 0x6a, 0xca, 0x69, 0x0f, 0xba, 0x45,
	0x3e, 0xb8, 0xd9, 0xef, 0xd0, 0xcc, 0x8e, 0x97, 0x39, 0x3d, 0x03, 0x61, 0x56, 0xe9, 0x1c, 0xdb,
	0xd2, 0xeb, 0xc4, 0x98, 0xeb, 0x34, 0xcb, 0x54, 0x94, 0x64, 0x17, 0x34, 0xb9, 0x36, 0x77, 0xf7,
	0x5b, 0x81, 0xc7, 0x92, 0x3b, 0xc0, 0x78, 0xb7, 0xbc, 0x67, 0x1b, 0xe7, 0x29, 0x9b, 0x51, 0x75,
	0xdd, 0xda, 0xde, 0x4d, 0x1d, 0xad, 0x0f, 0xfb, 0x85, 0xbe, 0x97, 0xa7, 0x3b, 0xfe, 0x75, 0x0f,
	0xaa, 0x03, 0x6a, 0xa3, 0x0b, 0xa8, 0x65, 0xbf, 0x1c, 0x1d, 0x21, 0xe1, 0xfc, 0x0c, 0xd5, 0xe7,
	0xa5, 0xed, 0xa5, 0x00, 0xfa, 0x04, 0x0f, 0xd2, 0xdf, 0x86, 0x76, 0xfa, 0xbd, 0x54, 0x53, 0xed,
	0x97, 0x34, 0x39, 0xe5, 0x25, 0xd4, 0x73, 0xfb, 0xae, 0xc9, 0xdc, 0x08, 0xc4, 0x2f, 0xca, 0xfb,
	0x9c, 0xfb, 0x2b, 0x20, 0xc9, 0x3a, 0x77, 0x73, 0xb6, 0x32, 0x08, 0xf5, 0x60, 0x1d, 0x82, 0x2b,
	0x10, 0x68, 0xc8, 0xd7, 0xb2, 0x5f, 0x1a, 0x28, 0xd3, 0x79, 0xb5, 0x01, 0x88, 0x4b, 0x4d, 0x60,
	0x4f, 0xb6, 0x55, 0xfb, 0x25, 0x21, 0x33, 0x99, 0xc3, 0xb5, 0x10, 0x2e, 0x32, 0x85, 0x66, 0xc1,
	0x6e, 0x3c, 0x2b, 0xcf, 0x9c, 0x49, 0xbd, 0xde, 0x04, 0xb5, 0x54, 0x7b, 0x77, 0xf6, 0x67, 0xa6,
	0x29, 0xb7, 0x33, 0x4d, 0xf9, 0x37, 0xd3, 0x94, 0x9f, 0x73, 0xad, 0x72, 0x3b, 0xd7, 0x2a, 0x7f,
	0xe7, 0x5a, 0xe5, 0x52, 0xb7, 0x49, 0x78, 0x15, 0x99, 0xfa, 0xc4, 0x73, 0x0c, 0x1f, 0xdb, 0xf6,
	0xcd, 0xb7, 0xd8, 0xa0, 0x9e, 0xe3, 0xe0, 0x29, 0xc1, 0x81, 0x11, 0x9f, 0x18, 0xd7, 0xec, 0x77,
	0x69, 0x84, 0x37, 0x3e, 0xa6, 0xe6, 0x4e, 0xf2, 0xd7, 0x3c, 0xf9, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x7c, 0x61, 0x1a, 0x18, 0x6e, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RemovePublisher(ctx context.Context, in *MsgRemovePublisher, opts ...grpc.CallOption) (*MsgRemovePublisherResponse, error)
	AddSubscriber(ctx context.Context, in *MsgAddSubscriber, opts ...grpc.CallOption) (*MsgAddSubscriberResponse, error)
	RemoveSubscriber(ctx context.Context, in *MsgRemoveSubscriber, opts ...grpc.CallOption) (*MsgRemoveSubscriberResponse, error)
	AddPublisherIntent(ctx context.Context, in *MsgAddPublisherIntent, opts ...grpc.CallOption) (*MsgAddPublisherIntentResponse, error)
	RemovePublisherIntent(ctx context.Context, in *MsgRemovePublisherIntent, opts ...grpc.CallOption) (*MsgRemovePublisherIntentResponse, error)
	AddSubscriberIntent(ctx context.Context, in *MsgAddSubscriberIntent, opts ...grpc.CallOption) (*MsgAddSubscriberIntentResponse, error)
	RemoveSubscriberIntent(ctx context.Context, in *MsgRemoveSubscriberIntent, opts ...grpc.CallOption) (*MsgRemoveSubscriberIntentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RemovePublisher(ctx context.Context, in *MsgRemovePublisher, opts ...grpc.CallOption) (*MsgRemovePublisherResponse, error) {
	out := new(MsgRemovePublisherResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/RemovePublisher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddSubscriber(ctx context.Context, in *MsgAddSubscriber, opts ...grpc.CallOption) (*MsgAddSubscriberResponse, error) {
	out := new(MsgAddSubscriberResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/AddSubscriber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSubscriber(ctx context.Context, in *MsgRemoveSubscriber, opts ...grpc.CallOption) (*MsgRemoveSubscriberResponse, error) {
	out := new(MsgRemoveSubscriberResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/RemoveSubscriber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddPublisherIntent(ctx context.Context, in *MsgAddPublisherIntent, opts ...grpc.CallOption) (*MsgAddPublisherIntentResponse, error) {
	out := new(MsgAddPublisherIntentResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/AddPublisherIntent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemovePublisherIntent(ctx context.Context, in *MsgRemovePublisherIntent, opts ...grpc.CallOption) (*MsgRemovePublisherIntentResponse, error) {
	out := new(MsgRemovePublisherIntentResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/RemovePublisherIntent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddSubscriberIntent(ctx context.Context, in *MsgAddSubscriberIntent, opts ...grpc.CallOption) (*MsgAddSubscriberIntentResponse, error) {
	out := new(MsgAddSubscriberIntentResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/AddSubscriberIntent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSubscriberIntent(ctx context.Context, in *MsgRemoveSubscriberIntent, opts ...grpc.CallOption) (*MsgRemoveSubscriberIntentResponse, error) {
	out := new(MsgRemoveSubscriberIntentResponse)
	err := c.cc.Invoke(ctx, "/pubsub.v1.Msg/RemoveSubscriberIntent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RemovePublisher(context.Context, *MsgRemovePublisher) (*MsgRemovePublisherResponse, error)
	AddSubscriber(context.Context, *MsgAddSubscriber) (*MsgAddSubscriberResponse, error)
	RemoveSubscriber(context.Context, *MsgRemoveSubscriber) (*MsgRemoveSubscriberResponse, error)
	AddPublisherIntent(context.Context, *MsgAddPublisherIntent) (*MsgAddPublisherIntentResponse, error)
	RemovePublisherIntent(context.Context, *MsgRemovePublisherIntent) (*MsgRemovePublisherIntentResponse, error)
	AddSubscriberIntent(context.Context, *MsgAddSubscriberIntent) (*MsgAddSubscriberIntentResponse, error)
	RemoveSubscriberIntent(context.Context, *MsgRemoveSubscriberIntent) (*MsgRemoveSubscriberIntentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RemovePublisher(ctx context.Context, req *MsgRemovePublisher) (*MsgRemovePublisherResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePublisher not implemented")
}
func (*UnimplementedMsgServer) AddSubscriber(ctx context.Context, req *MsgAddSubscriber) (*MsgAddSubscriberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSubscriber not implemented")
}
func (*UnimplementedMsgServer) RemoveSubscriber(ctx context.Context, req *MsgRemoveSubscriber) (*MsgRemoveSubscriberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubscriber not implemented")
}
func (*UnimplementedMsgServer) AddPublisherIntent(ctx context.Context, req *MsgAddPublisherIntent) (*MsgAddPublisherIntentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPublisherIntent not implemented")
}
func (*UnimplementedMsgServer) RemovePublisherIntent(ctx context.Context, req *MsgRemovePublisherIntent) (*MsgRemovePublisherIntentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePublisherIntent not implemented")
}
func (*UnimplementedMsgServer) AddSubscriberIntent(ctx context.Context, req *MsgAddSubscriberIntent) (*MsgAddSubscriberIntentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSubscriberIntent not implemented")
}
func (*UnimplementedMsgServer) RemoveSubscriberIntent(ctx context.Context, req *MsgRemoveSubscriberIntent) (*MsgRemoveSubscriberIntentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubscriberIntent not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RemovePublisher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemovePublisher)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemovePublisher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/RemovePublisher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemovePublisher(ctx, req.(*MsgRemovePublisher))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddSubscriber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddSubscriber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddSubscriber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/AddSubscriber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddSubscriber(ctx, req.(*MsgAddSubscriber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSubscriber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSubscriber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSubscriber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/RemoveSubscriber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSubscriber(ctx, req.(*MsgRemoveSubscriber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddPublisherIntent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddPublisherIntent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddPublisherIntent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/AddPublisherIntent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddPublisherIntent(ctx, req.(*MsgAddPublisherIntent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemovePublisherIntent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemovePublisherIntent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemovePublisherIntent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/RemovePublisherIntent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemovePublisherIntent(ctx, req.(*MsgRemovePublisherIntent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddSubscriberIntent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddSubscriberIntent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddSubscriberIntent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/AddSubscriberIntent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddSubscriberIntent(ctx, req.(*MsgAddSubscriberIntent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSubscriberIntent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSubscriberIntent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSubscriberIntent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.v1.Msg/RemoveSubscriberIntent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSubscriberIntent(ctx, req.(*MsgRemoveSubscriberIntent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pubsub.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RemovePublisher",
			Handler:    _Msg_RemovePublisher_Handler,
		},
		{
			MethodName: "AddSubscriber",
			Handler:    _Msg_AddSubscriber_Handler,
		},
		{
			MethodName: "RemoveSubscriber",
			Handler:    _Msg_RemoveSubscriber_Handler,
		},
		{
			MethodName: "AddPublisherIntent",
			Handler:    _Msg_AddPublisherIntent_Handler,
		},
		{
			MethodName: "RemovePublisherIntent",
			Handler:    _Msg_RemovePublisherIntent_Handler,
		},
		{
			MethodName: "AddSubscriberIntent",
			Handler:    _Msg_AddSubscriberIntent_Handler,
		},
		{
			MethodName: "RemoveSubscriberIntent",
			Handler:    _Msg_RemoveSubscriberIntent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pubsub/v1/tx.proto",
}

func (m *MsgRemovePublisher) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePublisher) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePublisher) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PublisherDomain) > 0 {
		i -= len(m.PublisherDomain)
		copy(dAtA[i:], m.PublisherDomain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublisherDomain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemovePublisherResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePublisherResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePublisherResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddSubscriber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSubscriber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSubscriber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if m.Subscriber != nil {
		{
			size, err := m.Subscriber.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddSubscriberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSubscriberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSubscriberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSubscriber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSubscriber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSubscriber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SubscriberAddress) > 0 {
		i -= len(m.SubscriberAddress)
		copy(dAtA[i:], m.SubscriberAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubscriberAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSubscriberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSubscriberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSubscriberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddPublisherIntent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPublisherIntent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPublisherIntent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if m.PublisherIntent != nil {
		{
			size, err := m.PublisherIntent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddPublisherIntentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPublisherIntentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPublisherIntentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemovePublisherIntent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePublisherIntent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePublisherIntent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SubscriptionId) > 0 {
		i -= len(m.SubscriptionId)
		copy(dAtA[i:], m.SubscriptionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubscriptionId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PublisherDomain) > 0 {
		i -= len(m.PublisherDomain)
		copy(dAtA[i:], m.PublisherDomain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublisherDomain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemovePublisherIntentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePublisherIntentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePublisherIntentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddSubscriberIntent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSubscriberIntent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSubscriberIntent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if m.SubscriberIntent != nil {
		{
			size, err := m.SubscriberIntent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddSubscriberIntentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSubscriberIntentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSubscriberIntentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSubscriberIntent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSubscriberIntent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSubscriberIntent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PublisherDomain) > 0 {
		i -= len(m.PublisherDomain)
		copy(dAtA[i:], m.PublisherDomain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublisherDomain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SubscriptionId) > 0 {
		i -= len(m.SubscriptionId)
		copy(dAtA[i:], m.SubscriptionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubscriptionId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SubscriberAddress) > 0 {
		i -= len(m.SubscriberAddress)
		copy(dAtA[i:], m.SubscriberAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubscriberAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSubscriberIntentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSubscriberIntentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSubscriberIntentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRemovePublisher) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PublisherDomain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemovePublisherResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddSubscriber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Subscriber != nil {
		l = m.Subscriber.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddSubscriberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSubscriber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SubscriberAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveSubscriberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddPublisherIntent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PublisherIntent != nil {
		l = m.PublisherIntent.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddPublisherIntentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemovePublisherIntent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PublisherDomain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubscriptionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemovePublisherIntentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddSubscriberIntent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberIntent != nil {
		l = m.SubscriberIntent.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddSubscriberIntentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSubscriberIntent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SubscriberAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubscriptionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PublisherDomain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveSubscriberIntentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRemovePublisher) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePublisher: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePublisher: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublisherDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePublisherResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePublisherResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePublisherResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSubscriber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSubscriber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSubscriber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscriber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subscriber == nil {
				m.Subscriber = &Subscriber{}
			}
			if err := m.Subscriber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSubscriberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSubscriberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSubscriberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSubscriber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSubscriber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSubscriber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriberAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSubscriberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSubscriberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSubscriberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPublisherIntent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPublisherIntent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPublisherIntent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherIntent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PublisherIntent == nil {
				m.PublisherIntent = &PublisherIntent{}
			}
			if err := m.PublisherIntent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPublisherIntentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPublisherIntentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPublisherIntentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePublisherIntent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePublisherIntent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePublisherIntent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublisherDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriptionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriptionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePublisherIntentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePublisherIntentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePublisherIntentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSubscriberIntent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSubscriberIntent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSubscriberIntent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberIntent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberIntent == nil {
				m.SubscriberIntent = &SubscriberIntent{}
			}
			if err := m.SubscriberIntent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSubscriberIntentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSubscriberIntentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSubscriberIntentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSubscriberIntent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSubscriberIntent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSubscriberIntent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriberAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriptionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriptionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublisherDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSubscriberIntentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSubscriberIntentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSubscriberIntentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
