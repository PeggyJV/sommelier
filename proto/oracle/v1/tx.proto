syntax = "proto3";
package oracle.v1;

import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";
import "oracle/v1/oracle.proto";

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

// MsgService defines the msgs that the oracle module handles.
service Msg {
    rpc DelegateFeedConsent (MsgDelegateFeedConsent) returns (MsgDelegateFeedConsentResponse);
    rpc OracleDataPrevote   (MsgOracleDataPrevote)   returns (MsgOracleDataPrevoteResponse);
    rpc OracleDataVote      (MsgOracleDataVote)      returns (MsgOracleDataVoteResponse);
}

// MsgDelegateFeedConsent - sdk.Msg for delegating oracle voting rights from a validator
// to another address, must be signed by an active validator
message MsgDelegateFeedConsent {
    string delegate  = 1;
    string validator = 2;
}

message MsgDelegateFeedConsentResponse {}

// MsgOracleDataPrevote - sdk.Msg for prevoting on an array of oracle data types.
// The purpose of the prevote is to hide vote for data with hashes formatted as hex string: 
// SHA256("{salt}:{data_cannonical_json}:{voter}")
message MsgOracleDataPrevote {
    OraclePrevote   prevote = 1;
    string          signer  = 2;
}

message MsgOracleDataPrevoteResponse {}

// MsgOracleDataVote - sdk.Msg for submitting arbitrary oracle data that has been prevoted on
message MsgOracleDataVote {
    OracleVote vote   = 1;
    string     signer = 2;
}

message MsgOracleDataVoteResponse {}
