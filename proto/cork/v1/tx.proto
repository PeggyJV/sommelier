syntax = "proto3";
package cork.v1;

import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";
import "cork/v1/cork.proto";

option go_package = "github.com/peggyjv/sommelier/v6/x/cork/types";

// MsgService defines the msgs that the cork module handles
service Msg {
  rpc SubmitCork(MsgSubmitCorkRequest) returns (MsgSubmitCorkResponse);
  rpc ScheduleCork(MsgScheduleCorkRequest) returns (MsgScheduleCorkResponse);
}

// MsgSubmitCorkRequest - sdk.Msg for submitting calls to Ethereum through the gravity bridge contract
message MsgSubmitCorkRequest {
  // the cork to send across the bridge
  Cork cork = 1;
  // signer account address
  string signer = 2;
}

message MsgSubmitCorkResponse {}

// MsgScheduleCorkRequest - sdk.Msg for scheduling a cork request for on or after a specific block height
message MsgScheduleCorkRequest {
  // the scheduled cork
  Cork cork = 1;
  // the block height that must be reached
  uint64 block_height = 2;
  // signer account address
  string signer = 3;
}

message MsgScheduleCorkResponse {}