syntax = "proto3";
package oracle.v1;

import "gogoproto/gogo.proto";
// import "google/protobuf/any.proto";
// import "cosmos_proto/cosmos.proto";

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

// ExchangeRatePrevote - struct to store a validator's prevote on the rate of Luna in the denom asset
// type ExchangeRatePrevote struct {
// 	Hash        VoteHash       `json:"hash"`  // Vote hex hash to protect centralize data source problem
// 	Denom       string         `json:"denom"` // Ticker name of target fiat currency
// 	Voter       sdk.ValAddress `json:"voter"` // Voter val address
// 	SubmitBlock int64          `json:"submit_block"`
// }
message ExchangeRatePrevote {
    bytes hash = 1;
    string denom = 2;
    string voter = 3;
    int64 submit_block = 4;
}

// ExchangeRateVote - struct to store a validator's vote on the rate of Luna in the denom asset
// type ExchangeRateVote struct {
// 	ExchangeRate sdk.Dec        `json:"exchange_rate"` // ExchangeRate of Luna in target fiat currency
// 	Denom        string         `json:"denom"`         // Ticker name of target fiat currency
// 	Voter        sdk.ValAddress `json:"voter"`         // voter val address of validator
// }
message ExchangeRateVote {
    string exchange_rate  = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
    string denom = 2;
    string voter = 3;
}

// AggregateExchangeRatePrevote - struct to store a validator's aggregate prevote on the rate of Luna in the denom asset
// type AggregateExchangeRatePrevote struct {
// 	Hash        AggregateVoteHash `json:"hash"`  // Vote hex hash to protect centralize data source problem
// 	Voter       sdk.ValAddress    `json:"voter"` // Voter val address
// 	SubmitBlock int64             `json:"submit_block"`
// }
message AggregateExchangeRatePrevote {
    bytes hash = 1;
    string voter = 2; 
    int64 submit_block = 3;
}

// ExchangeRateTuple - struct to represent a exchange rate of Luna in the denom asset
// type ExchangeRateTuple struct {
// 	Denom        string  `json:"denom"`
// 	ExchangeRate sdk.Dec `json:"exchange_rate"`
// }
message ExchangeRateTuple {
    string denom = 1;
    string exchange_rate  = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

// AggregateExchangeRateVote - struct to store a validator's aggregate vote on the rate of Luna in the denom asset
// type AggregateExchangeRateVote struct {
// 	ExchangeRateTuples ExchangeRateTuples `json:"exchange_rate_tuples"` // ExchangeRates of Luna in target fiat currencies
// 	Voter              sdk.ValAddress     `json:"voter"`                // voter val address of validator
// }
message AggregateExchangeRateVote {
    repeated ExchangeRateTuple exchange_rate_tuples = 1 [(gogoproto.nullable) = false];
    string voter = 2;
}