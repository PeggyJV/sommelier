syntax = "proto3";
package cork.v2;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cork/v2/genesis.proto";
import "cork/v2/cork.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/peggyjv/sommelier/v4/x/cork/types";

// Query defines the gRPC query service for the cork module.
service Query {
  // QueryParams queries the allocation module parameters.
  rpc QueryParams(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sommelier/cork/v1/params";
  }
  // QuerySubmittedCorks queries the submitted corks awaiting vote
  rpc QuerySubmittedCorks(QuerySubmittedCorksRequest) returns (QuerySubmittedCorksResponse) {
    option (google.api.http).get = "/sommelier/cork/v1/submitted";
  }
  // QueryCellarIDs returns all cellars and current tick ranges
  rpc QueryCellarIDs(QueryCellarIDsRequest) returns (QueryCellarIDsResponse) {
    option (google.api.http).get = "/sommelier/cork/v1/cellar_ids";
  }
  // QueryScheduledCorks returns all scheduled corks
  rpc QueryScheduledCorks(QueryScheduledCorksRequest) returns (QueryScheduledCorksResponse) {
    option (google.api.http).get = "/sommelier/cork/v1/scheduled_corks";
  }
  // QueryScheduledBlockHeights returns all scheduled block heights
  rpc QueryScheduledBlockHeights(QueryScheduledBlockHeightsRequest) returns (QueryScheduledBlockHeightsResponse) {
    option (google.api.http).get = "/sommelier/cork/v1/scheduled_block_heights";
  }

  // QueryScheduledCorks returns all scheduled corks at a block height
  rpc QueryScheduledCorksByBlockHeight(QueryScheduledCorksByBlockHeightRequest) returns (QueryScheduledCorksByBlockHeightResponse) {
    option (google.api.http).get = "/sommelier/cork/v1/scheduled_corks_by_block_height/{block_height}";
  }
}

// QueryParamsRequest is the request type for the Query/Params gRPC method.
message QueryParamsRequest {}

// QueryParamsRequest is the response type for the Query/Params gRPC method.
message QueryParamsResponse {
  // allocation parameters
  Params params = 1 [(gogoproto.nullable) = false];
}

// QuerySubmittedCorksRequest is the request type for the Query/QuerySubmittedCorks gRPC query method.
message QuerySubmittedCorksRequest {}

// QuerySubmittedCorksResponse is the response type for the Query/QuerySubmittedCorks gRPC query method.
message QuerySubmittedCorksResponse {
  // corks in keeper awaiting vote
  repeated Cork corks = 1;
}

// QueryCellarIDsRequest is the request type for Query/QueryCellarIDs gRPC method.
message QueryCellarIDsRequest {}

// QueryCellarIDsResponse is the response type for Query/QueryCellars gRPC method.
message QueryCellarIDsResponse {
  repeated string cellar_ids = 1;
}

// QueryScheduledCorksRequest
message QueryScheduledCorksRequest {}

// QueryScheduledCorksResponse
message QueryScheduledCorksResponse {
  repeated ScheduledCork corks = 1;
}

// QueryScheduledBlockHeightsRequest
message QueryScheduledBlockHeightsRequest {}

// QueryScheduledBlockHeightsResponse
message QueryScheduledBlockHeightsResponse {
  repeated uint64 block_heights = 1;
}

// QueryScheduledCorksByBlockHeightRequest
message QueryScheduledCorksByBlockHeightRequest {
  uint64 block_height = 1;
}

// QueryScheduledCorksByBlockHeightResponse
message QueryScheduledCorksByBlockHeightResponse {
  repeated ScheduledCork corks = 1;
}