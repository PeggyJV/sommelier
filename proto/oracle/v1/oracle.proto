syntax = "proto3";
package oracle.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

// Claim is an interface that directs its rewards to an attached bank account.
message Claim {
    int64  weight    = 1;
    string recipient = 2; 
}

// ExchangeRatePrevote - struct to store a validator's prevote on the rate of Luna in the denom asset
message ExchangeRatePrevote {
    bytes  hash         = 1;
    string denom        = 2;
    string voter        = 3;
    int64  submit_block = 4 [(gogoproto.moretags) = "yaml:\"submit_block\""];
}

// ExchangeRateVote - struct to store a validator's vote on the rate of Luna in the denom asset
message ExchangeRateVote {
    string exchange_rate  = 1 [
        (gogoproto.moretags) = "yaml:\"exchange_rate\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];
    string denom          = 2;
    string voter          = 3;
}

// AggregateExchangeRatePrevote - struct to store a validator's aggregate prevote on the rate of Luna in the denom asset
message AggregateExchangeRatePrevote {
    bytes  hash         = 1;
    string voter        = 2; 
    int64  submit_block = 3 [(gogoproto.moretags) = "yaml:\"submit_block\""];
}

// AggregateExchangeRateVote - struct to store a validator's aggregate vote on the rate of Luna in the denom asset
message AggregateExchangeRateVote {
    string                                    voter                = 1;
    repeated cosmos.base.v1beta1.DecCoin      exchange_rate_tuples = 2 [
        (gogoproto.moretags) = "yaml:\"exchange_rate_tuples\"",
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", 
        (gogoproto.nullable) = false
    ];
}


// Params oracle parameters
message Params {
    int64                                vote_period                = 1 [
        (gogoproto.moretags) = "yaml:\"exchange_rate_tuples\""
    ];
    string                               vote_threshold             = 2 [
        (gogoproto.moretags) = "yaml:\"vote_threshold\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];
    string                               reward_band                = 3 [
        (gogoproto.moretags) = "yaml:\"reward_band\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable)   = false
    ];
    int64                                reward_distribution_window = 4 [
        (gogoproto.moretags) = "yaml:\"reward_distribution_window\""
    ]; 
    // NOTE: The amounts here indicate the tobin tax for each currency
    repeated cosmos.base.v1beta1.DecCoin whitelist                  = 5 [
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", 
        (gogoproto.nullable) = false
    ];
    string                               slash_fraction             = 6 [
        (gogoproto.moretags) = "yaml:\"slash_fraction\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];
    int64                                slash_window               = 7 [
        (gogoproto.moretags) = "yaml:\"slash_window\""
    ];
    string                               min_valid_per_window       = 8 [
        (gogoproto.moretags) = "yaml:\"min_valid_per_window\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];
}