syntax = "proto3";
package allocation.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/peggyjv/sommelier/v3/x/allocation/types";

// AllocationPrecommit defines an array of hashed data to be used for the precommit phase
// of allocation
message AllocationPrecommit {
//  bytes  hash = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
  bytes  hash = 1;
  string cellar_id = 2;
}

message RebalanceVote {
  Cellar cellar = 1;
  uint64 current_price = 2;
}

// Allocation is the commit for all allocations for a cellar by a validator
message Allocation {
  RebalanceVote vote = 1;
  string salt = 2;
}

// Cellar is a collection of pools for a token pair
message Cellar {
  string id = 1;
  repeated TickRange tick_ranges = 2;
}

message TickRange {
  int32 upper = 1;
  int32 lower = 2;
  uint32 weight = 3;
}

message CellarUpdate {
  uint64 invalidation_nonce = 1;
  RebalanceVote vote = 2;
}

message AddManagedCellarsProposal {
  string title = 1;
  string description = 2;
  repeated string cellar_ids = 3;
}

message RemoveManagedCellarsProposal {
  string title = 1;
  string description = 2;
  repeated string cellar_ids = 3;
}
