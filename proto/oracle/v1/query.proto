syntax = "proto3";
package oracle.v1;

import "gogoproto/gogo.proto";
import "oracle/v1/oracle.proto";
import "oracle/v1/tx.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

service Query {
    rpc QueryDelegeateAddress(QueryDelegeateAddressRequest) returns (QueryDelegeateAddressResponse) {}
    rpc QueryOracleDataPrevote(QueryOracleDataPrevoteRequest) returns (QueryOracleDataPrevoteResponse) {}
    rpc QueryOracleDataVote(QueryOracleDataVoteRequest) returns (MsgOracleDataVote) {}
    rpc OracleData(QueryOracleDataRequest) returns (QueryOracleDataResponse) {}
}

message QueryDelegeateAddressRequest {
    string validator = 1;
}
message QueryDelegeateAddressResponse {
    string delegate = 2;
}

message QueryOracleDataPrevoteRequest {
    string validator = 1; 
}
message QueryOracleDataPrevoteResponse {
    repeated bytes hashes = 1;
}

message QueryOracleDataVoteRequest {
    string validator = 1;
}

message QueryOracleDataRequest  {
    string type = 1;
}
message QueryOracleDataResponse {
    google.protobuf.Any oracle_data = 1 [
        (cosmos_proto.accepts_interface) = "OracleData"
    ];
}