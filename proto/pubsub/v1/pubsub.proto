syntax = "proto3";
package pubsub.v1;

option go_package = "github.com/peggyjv/sommelier/v3/x/pubsub/types";

message Publisher {
  string domain = 1; // unique key
  string ca_cert = 2;
  string address = 3;
  string proof_url = 4;
}

message Subscriber {
  string address = 1; // unique key, account address representation of either an account or a validator
  // the below fields are optional, and only required if the subscriber wants to use "push" subscriptions
  string domain = 2;
  string ca_cert = 3;
  string proof_url = 4;
}

// for a given PublisherIntent, whether or not it is pulled or pushed
enum PublishMethod {
  PULL = 0;
  PUSH = 1;
}

// for a given PublisherIntent, determines what types of subscribers may subscribe
enum AllowedSubscribers {
  ANY = 0;
  VALIDATORS = 1;
  LIST = 2;
}

message PublisherIntent {
  // unique key is subscription_id and publisher_domain tuple
  string subscription_id = 1; // max length of 128 characters
  string publisher_domain = 2;
  PublishMethod method = 3;
  string pull_url = 4; // optional, only needs to be set if using the "pull" method
  AllowedSubscribers allowed_subscribers = 5;
  repeated string allowed_addresses = 6; // optional, must be provided if allowed_subscribers is LIST, list of account addresses
}

message SubscriberIntent {
  // unique key is subscription_id and subscriber_address tuple, a given subscriber can only subscribe to one publisher per
  // subscription_id at a time
  string subscription_id = 1;
  string subscriber_address = 2;
  string publisher_domain = 3;
  string push_url = 4; // optional, only needs to be set if the PublisherIntent for this subscription uses the PUSH method
}

message AddPublisherProposal {
  string title = 1;
  string description = 2;
  Publisher publisher = 3;
}

message RemovePublisherProposal {
  string title = 1;
  string description = 2;
  Publisher publisher = 3;
}
