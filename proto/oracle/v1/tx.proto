syntax = "proto3";
package oracle.v1;

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

// MsgService defines the msgs that the oracle module handles.
service Msg {
  rpc DelegateFeedConsent          (MsgDelegateFeedConsent)          returns (MsgDelegateFeedConsentResponse);
  rpc AggregateExchangeRatePrevote (MsgAggregateExchangeRatePrevote) returns (MsgAggregateExchangeRatePrevoteResponse);
  rpc AggregateExchangeRateVote    (MsgAggregateExchangeRateVote)    returns (MsgAggregateExchangeRateVoteResponse);
}

// MsgDelegateFeedConsent - struct for delegating oracle voting rights to another address.
message MsgDelegateFeedConsent {
    string operator = 1;
    string delegate = 2;
}

message MsgDelegateFeedConsentResponse {}

// MsgAggregateExchangeRatePrevote - struct for aggregate prevoting on the ExchangeRateVote.
// The purpose of aggregate prevote is to hide vote exchange rates with hash
// which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
message MsgAggregateExchangeRatePrevote {
    bytes  hash      = 1;
    string feeder    = 2;
    string validator = 3;
}

message MsgAggregateExchangeRatePrevoteResponse {}

// MsgAggregateExchangeRateVote - struct for voting on the exchange rates of Luna denominated in various Terra assets.
message MsgAggregateExchangeRateVote {
    string salt           = 1;
    // NOTE: this exchange rates string is a DecCoins.String()
    string exchange_rates = 2;
    string feeder         = 3;
    string validator      = 4;
}

message MsgAggregateExchangeRateVoteResponse {}
