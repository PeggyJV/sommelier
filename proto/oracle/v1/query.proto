syntax = "proto3";
package oracle.v1;

// import "gogoproto/gogo.proto";
// import "google/protobuf/any.proto";
// import "cosmos_proto/cosmos.proto";

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

service Query {
    rpc ExchangeRate(QueryExchangeRateRequest) returns (QueryExchangeRateResponse) {}
    rpc ExchangeRates(QueryExchangeRatesRequest) returns (QueryExchangeRatesResponse) {}
    rpc Actives(QueryActivesRequest) returns (QueryActivesResponse) {}
    rpc Votes(QueryVotesRequest) returns (QueryVotesResponse) {}
    rpc Prevotes(QueryPrevotesRequest) returns (QueryPrevotesResponse) {}
    rpc Parameters(QueryParametersRequest) returns (QueryParametersResponse) {}
    rpc FeederDelegation(QueryFeederDelegationRequest) returns (QueryFeederDelegationResponse) {}
    rpc MissCounter(QueryMissCounterRequest) returns (QueryMissCounterResponse) {}
    rpc AggregatePrevote(QueryAggregatePrevoteRequest) returns (QueryAggregatePrevoteResponse) {}
    rpc AggregateVote(QueryAggregateVoteRequest) returns (QueryAggregateVoteResponse) {}
    rpc VoteTargets(QueryVoteTargetsRequest) returns (QueryVoteTargetsResponse) {}
    rpc TobinTax(QueryTobinTaxRequest) returns (QueryTobinTaxResponse) {}
    rpc TobinTaxes(QueryTobinTaxesRequest) returns (QueryTobinTaxesResponse) {}
}

message QueryExchangeRateRequest {
    string denom = 1;
}
message QueryExchangeRateResponse {}

message QueryExchangeRatesRequest {}
message QueryExchangeRatesResponse {}

message QueryActivesRequest {}
message QueryActivesResponse {}

message QueryVotesRequest {
    string voter = 1;
    string denom = 2;
}
message QueryVotesResponse {}

message QueryPrevotesRequest {
    string voter = 1;
    string denom = 2;
}
message QueryPrevotesResponse {}

message QueryParametersRequest {}
message QueryParametersResponse {}

message QueryFeederDelegationRequest {
    string validator = 1;
}
message QueryFeederDelegationResponse {}

message QueryMissCounterRequest {
    string validator = 1;
}
message QueryMissCounterResponse {}

message QueryAggregatePrevoteRequest {
    string validator = 1;
}
message QueryAggregatePrevoteResponse {}

message QueryAggregateVoteRequest {
    string validator = 1;
}
message QueryAggregateVoteResponse {}

message QueryVoteTargetsRequest {}
message QueryVoteTargetsResponse {}

message QueryTobinTaxRequest {
    string denom = 1;
}
message QueryTobinTaxResponse {}

message QueryTobinTaxesRequest {}
message QueryTobinTaxesResponse {}
