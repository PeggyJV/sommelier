syntax = "proto3";
package auction.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "auction/v1/genesis.proto";
import "auction/v1/auction.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/peggyjv/sommelier/v4/x/auction/types";

service Query {
  rpc QueryParams(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sommelier/auction/v1/params";
  }

  rpc QueryAuction(QueryAuctionRequest) returns (QueryAuctionResponse) {
    option (google.api.http).get = "/sommelier/auction/v1/auction/{auction_id}";
  }

  rpc QueryCurrentAuctions(QueryCurrentAuctionsRequest) returns (QueryCurrentAuctionsResponse) {
    option (google.api.http).get = "/sommelier/auction/v1/current_auctions";
  }

  rpc QueryEndedAuctions(QueryEndedAuctionsRequest) returns (QueryEndedAuctionsResponse) {
    option (google.api.http).get = "/sommelier/auction/v1/ended_auctions";
  }

  rpc QueryBid(QueryBidRequest) returns (QueryBidResponse) {
    option (google.api.http).get = "/sommelier/auction/v1/bid/{bid_id}";
  }

  rpc QueryBidsByAuction(QueryBidsByAuctionRequest) returns (QueryBidsByAuctionResponse) {
    option (google.api.http).get = "/sommelier/auction/v1/bids/{auction_id}";
  }
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryAuctionRequest {
  uint32 auction_id = 1;
}

message QueryAuctionResponse {
  Auction auction = 1;
}

message QueryCurrentAuctionsRequest {}

message QueryCurrentAuctionsResponse {
  repeated Auction auctions = 1;
}

message QueryEndedAuctionsRequest {}

message QueryEndedAuctionsResponse {
  repeated Auction auctions = 1;
}

message QueryBidRequest {
  uint64 bid_id = 1;
}

message QueryBidResponse {
  Bid bid = 1;
}

message QueryBidsByAuctionRequest {
  uint32 auction_id = 1;
}

message QueryBidsByAuctionResponse {
  repeated Bid bids = 1;
}
