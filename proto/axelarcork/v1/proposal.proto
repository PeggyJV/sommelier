syntax = "proto3";
package axelarcork.v1;

import "axelarcork/v1/cork.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/peggyjv/sommelier/v6/x/axelarcork/types";

// note: current plan is to accept either chain name or chain ID. if both and they dont match, error.

message AddAxelarManagedCellarIDsProposal {
  string      title       = 1;
  string      description = 2;
  string      chain_name  = 3;
  uint64      chain_id    = 4;
  CellarIDSet cellar_ids  = 5;
}

// AddManagedCellarIDsProposalWithDeposit is a specific definition for CLI commands
message AddAxelarManagedCellarIDsProposalWithDeposit {
  string      title       = 1;
  string      description = 2;
  string      chain_name  = 3;
  uint64      chain_id    = 4;
  CellarIDSet cellar_ids  = 5;
  string      deposit     = 6;
}

message RemoveAxelarManagedCellarIDsProposal {
  string      title       = 1;
  string      description = 2;
  string      chain_name  = 3;
  uint64      chain_id    = 4;
  CellarIDSet cellar_ids  = 5;
}

// RemoveManagedCellarIDsProposalWithDeposit is a specific definition for CLI commands
message RemoveAxelarManagedCellarIDsProposalWithDeposit {
  string      title       = 1;
  string      description = 2;
  string      chain_name  = 3;
  uint64      chain_id    = 4;
  CellarIDSet cellar_ids  = 5;
  string      deposit     = 6;
}

message AxelarScheduledCorkProposal {
  string title                   = 1;
  string description             = 2;
  uint64 block_height            = 3;
  string chain_name              = 4;
  uint64 chain_id                = 5;
  string target_contract_address = 6;
  /*
   * The JSON representation of a ScheduleRequest defined in the Steward protos
   *
   * Example: The following is the JSON form of a ScheduleRequest containing a steward.v2.cellar_v1.TrustPosition
   * message, which maps to the `trustPosition(address)` function of the the V1 Cellar contract.
   *
   * {
   *   "cellar_id": "0x1234567890000000000000000000000000000000",
   *   "cellar_v1": {
   *     "trust_position": {
   *       "erc20_address": "0x1234567890000000000000000000000000000000"
   *     }
   *   },
   *   "block_height": 1000000
   * }
   *
   * You can use the Steward CLI to generate the required JSON rather than constructing it by hand
   * https://github.com/peggyjv/steward
   */
  string contract_call_proto_json = 7;
}

// ScheduledCorkProposalWithDeposit is a specific definition for CLI commands
message AxelarScheduledCorkProposalWithDeposit {
  string title                    = 1;
  string description              = 2;
  uint64 block_height             = 3;
  string chain_name               = 4;
  uint64 chain_id                 = 5;
  string target_contract_address  = 6;
  string contract_call_proto_json = 7;
  string deposit                  = 8;
}

message AxelarCommunityPoolSpendProposal {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = true;
  option (gogoproto.goproto_stringer) = true;

  string                   title       = 1;
  string                   description = 2;
  string                   recipient   = 3;
  uint64                   chain_id    = 4;
  string                   chain_name  = 5;
  cosmos.base.v1beta1.Coin amount      = 6 [(gogoproto.nullable) = false];
}

// This format of the community spend Ethereum proposal is specifically for
// the CLI to allow simple text serialization.
message AxelarCommunityPoolSpendProposalForCLI {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string title       = 1 [(gogoproto.moretags) = "yaml:\"title\""];
  string description = 2 [(gogoproto.moretags) = "yaml:\"description\""];
  string recipient   = 3 [(gogoproto.moretags) = "yaml:\"recipient\""];
  uint64 chain_id    = 4 [(gogoproto.moretags) = "yaml:\"chain_id\""];
  string chain_name  = 5 [(gogoproto.moretags) = "yaml:\"chain_name\""];
  string amount      = 6 [(gogoproto.moretags) = "yaml:\"amount\""];
  string deposit     = 7 [(gogoproto.moretags) = "yaml:\"deposit\""];
}

message AddChainConfigurationProposal {
  string             title               = 1;
  string             description         = 2;
  ChainConfiguration chain_configuration = 3;
}

message AddChainConfigurationProposalWithDeposit {
  string             title               = 1;
  string             description         = 2;
  ChainConfiguration chain_configuration = 3;
  string             deposit             = 4;
}

message RemoveChainConfigurationProposal {
  string title       = 1;
  string description = 2;
  uint64 chain_id    = 3;
}

message RemoveChainConfigurationProposalWithDeposit {
  string title       = 1;
  string description = 2;
  uint64 chain_id    = 3;
  string deposit     = 4;
}
