syntax = "proto3";
package pubsub.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "pubsub/v1/params.proto";
import "pubsub/v1/pubsub.proto";

option go_package = "github.com/peggyjv/sommelier/v3/x/pubsub/types";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/params";
  }

  rpc QueryPublisher(QueryPublisherRequest) returns (QueryPublisherResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/publishers/{publisher_domain}";
  }

  rpc QueryPublishers(QueryPublishersRequest) returns (QueryPublishersResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/publishers";
  }

  rpc QuerySubscriber(QuerySubscriberRequest) returns (QuerySubscriberResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscribers/{subscriber_address}";
  }

  rpc QuerySubscribers(QuerySubscribersRequest) returns (QuerySubscribersResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscribers";
  }

  rpc QueryPublisherIntent(QueryPublisherIntentRequest) returns (QueryPublisherIntentResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/publisher_intents/{publisher_domain}/{subscription_id}";
  }

  rpc QueryPublisherIntents(QueryPublisherIntentsRequest) returns (QueryPublisherIntentsResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/publisher_intents";
  }

  rpc QueryPublisherIntentsByPublisherDomain(QueryPublisherIntentsByPublisherDomainRequest) returns (QueryPublisherIntentsByPublisherDomainResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/publisher_intents/{publisher_domain}";
  }

  rpc QueryPublisherIntentsBySubscriptionId(QueryPublisherIntentsBySubscriptionIdRequest) returns (QueryPublisherIntentsBySubscriptionIdResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/publisher_intents_by_subscription_id/{subscription_id}";
  }

  rpc QuerySubscriberIntent(QuerySubscriberIntentRequest) returns (QuerySubscriberIntentResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscriber_intents/{subscriber_address}/{subscription_id}";
  }

  rpc QuerySubscriberIntents(QuerySubscriberIntentsRequest) returns (QuerySubscriberIntentsResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscriber_intents";
  }

  rpc QuerySubscriberIntentsBySubscriberAddress(QuerySubscriberIntentsBySubscriberAddressRequest) returns (QuerySubscriberIntentsBySubscriberAddressResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscriber_intents/{subscriber_address}";
  }

  rpc QuerySubscriberIntentsBySubscriptionId(QuerySubscriberIntentsBySubscriptionIdRequest) returns (QuerySubscriberIntentsBySubscriptionIdResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscriber_intents_by_subscription_id/{subscription_id}";
  }

  rpc QuerySubscriberIntentsByPublisherDomain(QuerySubscriberIntentsByPublisherDomainRequest) returns (QuerySubscriberIntentsByPublisherDomainResponse) {
    option (google.api.http).get = "/sommelier/pubsub/v1/subscriber_intents_by_publisher_domain/{publisher_domain}";
  }
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryPublisherRequest {
  string publisher_domain = 1;
}

message QueryPublisherResponse {
  Publisher publisher = 1;
}

message QueryPublishersRequest {}

message QueryPublishersResponse {
  repeated Publisher publishers = 1;
}

message QuerySubscriberRequest {
  string subscriber_address = 1;
}

message QuerySubscriberResponse {
  Subscriber subscriber = 1;
}

message QuerySubscribersRequest {}

message QuerySubscribersResponse {
  repeated Subscriber subscribers = 1;
}

message QueryPublisherIntentRequest {
  string publisher_domain = 1;
  string subscription_id = 2;
}

message QueryPublisherIntentResponse {
  PublisherIntent publisher_intent = 1;
}

message QueryPublisherIntentsRequest {}

message QueryPublisherIntentsResponse {
  repeated PublisherIntent publisher_intents = 1;
}

message QueryPublisherIntentsByPublisherDomainRequest {
  string publisher_domain = 1;
}

message QueryPublisherIntentsByPublisherDomainResponse {
  repeated PublisherIntent publisher_intents = 1;
}

message QueryPublisherIntentsBySubscriptionIdRequest {
  string subscription_id = 1;
}

message QueryPublisherIntentsBySubscriptionIdResponse {
  repeated PublisherIntent publisher_intents = 1;
}

message QuerySubscriberIntentRequest {
  string subscriber_address = 1;
  string subscription_id = 2;
}

message QuerySubscriberIntentResponse {
  SubscriberIntent subscriber_intent = 1;
}

message QuerySubscriberIntentsRequest {}

message QuerySubscriberIntentsResponse {
  repeated SubscriberIntent subscriber_intents = 1;
}

message QuerySubscriberIntentsBySubscriberAddressRequest {
  string subscriber_address = 1;
}

message QuerySubscriberIntentsBySubscriberAddressResponse {
  repeated SubscriberIntent subscriber_intents = 1;
}

message QuerySubscriberIntentsBySubscriptionIdRequest {
  string subscription_id = 1;
}

message QuerySubscriberIntentsBySubscriptionIdResponse {
  repeated SubscriberIntent subscriber_intents = 1;
}

message QuerySubscriberIntentsByPublisherDomainRequest {
  string publisher_domain = 1;
}

message QuerySubscriberIntentsByPublisherDomainResponse {
  repeated SubscriberIntent subscriber_intents = 1;
}