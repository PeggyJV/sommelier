syntax = "proto3";
package oracle.v1;

import "gogoproto/gogo.proto";
import "oracle/v1/oracle.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";


option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

service Query {
    rpc ExchangeRate(QueryExchangeRateRequest) returns (QueryExchangeRateResponse) {
        option (google.api.http).get = "/oracle/v1/exchange_rate/{denom}";
    }
    rpc ExchangeRates(QueryExchangeRatesRequest) returns (QueryExchangeRatesResponse) {
        option (google.api.http).get = "/oracle/v1/exchange_rates";
    }
    rpc Actives(QueryActivesRequest) returns (QueryActivesResponse) {
        option (google.api.http).get = "/oracle/v1/actives";
    }
    rpc Parameters(QueryParametersRequest) returns (QueryParametersResponse) {
        option (google.api.http).get = "/oracle/v1/parameters";
    }
    rpc FeederDelegation(QueryFeederDelegationRequest) returns (QueryFeederDelegationResponse) {
        option (google.api.http).get = "/oracle/v1/feeder_delegation/{validator}";
    }
    rpc MissCounter(QueryMissCounterRequest) returns (QueryMissCounterResponse) {
        option (google.api.http).get = "/oracle/v1/miss_counter/{validator}";
    }
    rpc AggregatePrevote(QueryAggregatePrevoteRequest) returns (QueryAggregatePrevoteResponse) {
        option (google.api.http).get = "/oracle/v1/aggregate_prevote/{validator}";
    }
    rpc AggregateVote(QueryAggregateVoteRequest) returns (QueryAggregateVoteResponse) {
        option (google.api.http).get = "/oracle/v1/aggregate_vote/{validator}";
    }
    rpc VoteTargets(QueryVoteTargetsRequest) returns (QueryVoteTargetsResponse) {
        option (google.api.http).get = "/oracle/v1/vote_targets";
    }
    rpc TobinTax(QueryTobinTaxRequest) returns (QueryTobinTaxResponse) {
        option (google.api.http).get = "/oracle/v1/tobin_tax/{denom}";
    }
    rpc TobinTaxes(QueryTobinTaxesRequest) returns (QueryTobinTaxesResponse) {
        option (google.api.http).get = "/oracle/v1/tobin_taxes";
    }
}

message QueryExchangeRateRequest {
    // token denomination
    string denom = 1;
}
message QueryExchangeRateResponse {
    // token exchange rate
    string rate = 1 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ]; 
}

message QueryExchangeRatesRequest {
    // pagination request
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryExchangeRatesResponse {
    repeated cosmos.base.v1beta1.DecCoin rates = 1 [
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", 
        (gogoproto.nullable) = false
    ];
    // pagination response
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryActivesRequest {
    // pagination request
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryActivesResponse {
    repeated string denoms = 1;
    // pagination response
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryParametersRequest {}
message QueryParametersResponse { Params params = 1 [(gogoproto.nullable) = false]; }

message QueryFeederDelegationRequest { string validator = 1; }
message QueryFeederDelegationResponse { string address = 1; }

message QueryMissCounterRequest { string validator = 1; }
message QueryMissCounterResponse { int64 counter = 1; }

message QueryAggregatePrevoteRequest { string validator = 1; }
message QueryAggregatePrevoteResponse { AggregateExchangeRatePrevote prevote = 1 [(gogoproto.nullable) = false]; }

message QueryAggregateVoteRequest { string validator = 1; }
message QueryAggregateVoteResponse { AggregateExchangeRateVote vote = 1 [(gogoproto.nullable) = false]; }

message QueryVoteTargetsRequest {
    // pagination request
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}
message QueryVoteTargetsResponse {
    repeated string targets = 1;
    // pagination response
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryTobinTaxRequest { string denom = 1; }
message QueryTobinTaxResponse { string rate = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false]; }

message QueryTobinTaxesRequest {
    // pagination request
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryTobinTaxesResponse {
    repeated cosmos.base.v1beta1.DecCoin rates = 1 [
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", 
        (gogoproto.nullable) = false
    ];
     // pagination response
     cosmos.base.query.v1beta1.PageResponse pagination = 2;
}