package types

import (
	"encoding/hex"
	"math/big"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/stretchr/testify/require"
	"gotest.tools/assert"
)

const (
	usdc_address   = "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
	signer         = "0x0c731Fb0D03211DD32A456370AD2ec3fFad46520"
	logic_contract = "0xf784709d2317D872237C4bC22f867d1BAe2913AB"
	usdc_eth_lp    = "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc"
)

func makeTestRedeemLiquidityETH() RedeemLiquidityETH {
	return RedeemLiquidityETH{
		Token:          common.HexToAddress(usdc_address),
		Liquidity:      big.NewInt(2000000000000),
		AmountTokenMin: big.NewInt(0),
		AmountETHMin:   big.NewInt(0),
		To:             common.HexToAddress(signer),
		Deadline:       big.NewInt(4766922941000),
	}
}

func TestRedeemLiquidityETHEncoding(t *testing.T) {
	ourHash, err := makeTestRedeemLiquidityETH().GetEncodedCall()
	require.NoError(t, err)

	// hash derived from javascript testing environment
	// ask @jackzampolin @jkilpatr or @jehan about the method here
	encodedFunctionCall := "0x0f77f6b2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c731fb0d03211dd32a456370ad2ec3ffad4652000000000000000000000000000000000000000000000000000000455e2bfa248"[2:]

	assert.Equal(t, encodedFunctionCall, hex.EncodeToString(ourHash))
}

func TestBatchRedeemGold1(t *testing.T) {
	ourHash, err := SimpleLogicBatch{
		Amounts:       []*big.Int{big.NewInt(2000000000000), big.NewInt(2000000000000), big.NewInt(2000000000000)},
		Payloads:      []Payload{makeTestRedeemLiquidityETH(), makeTestRedeemLiquidityETH(), makeTestRedeemLiquidityETH()},
		LogicContract: common.HexToAddress(logic_contract),
		TokenContract: common.HexToAddress(usdc_eth_lp),
	}.GetEncodedCall()
	require.NoError(t, err)

	// hash derived from javascript testing environment
	// ask @jackzampolin @jkilpatr or @jehan about the method here
	encodedFunctionCall := "0x6f1de7e700000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000100000000000000000000000000f784709d2317d872237c4bc22f867d1bae2913ab000000000000000000000000b4e16d0168e52d35cacd2c6185b44281ec28c9dc0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000000c40f77f6b2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c731fb0d03211dd32a456370ad2ec3ffad4652000000000000000000000000000000000000000000000000000000455e2bfa2480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c40f77f6b2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c731fb0d03211dd32a456370ad2ec3ffad4652000000000000000000000000000000000000000000000000000000455e2bfa2480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c40f77f6b2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000001d1a94a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c731fb0d03211dd32a456370ad2ec3ffad4652000000000000000000000000000000000000000000000000000000455e2bfa24800000000000000000000000000000000000000000000000000000000"[2:]

	assert.Equal(t, encodedFunctionCall, hex.EncodeToString(ourHash))
}
