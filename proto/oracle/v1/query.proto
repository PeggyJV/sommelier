syntax = "proto3";
package oracle.v1;

// import "gogoproto/gogo.proto";
// import "google/protobuf/any.proto";
// import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";

option go_package = "github.com/peggyjv/sommelier/x/oracle/types";

service Query {
    rpc ExchangeRate(QueryExchangeRateRequest) returns (QueryExchangeRateResponse) {
        option(google.api.http).get = "/oracle/v1/ExchangeRate";
    }
    rpc ExchangeRates(QueryExchangeRatesRequest) returns (QueryExchangeRatesResponse) {
        option(google.api.http).get = "/oracle/v1/ExchangeRates";
    }
    rpc Actives(QueryActivesRequest) returns (QueryActivesResponse) {
        option(google.api.http).get = "/oracle/v1/Actives";
    }
    rpc Votes(QueryVotesRequest) returns (QueryVotesResponse) {
        option(google.api.http).get = "/oracle/v1/Votes";
    }
    rpc Prevotes(QueryPrevotesRequest) returns (QueryPrevotesResponse) {
        option(google.api.http).get = "/oracle/v1/Prevotes";
    }
    rpc Parameters(QueryParametersRequest) returns (QueryParametersResponse) {
        option(google.api.http).get = "/oracle/v1/Parameters";
    }
    rpc FeederDelegation(QueryFeederDelegationRequest) returns (QueryFeederDelegationResponse) {
        option(google.api.http).get = "/oracle/v1/FeederDelegation";
    }
    rpc MissCounter(QueryMissCounterRequest) returns (QueryMissCounterResponse) {
        option(google.api.http).get = "/oracle/v1/MissCounter";
    }
    rpc AggregatePrevote(QueryAggregatePrevoteRequest) returns (QueryAggregatePrevoteResponse) {
        option(google.api.http).get = "/oracle/v1/AggregatePrevote";
    }
    rpc AggregateVote(QueryAggregateVoteRequest) returns (QueryAggregateVoteResponse) {
        option(google.api.http).get = "/oracle/v1/AggregateVote";
    }
    rpc VoteTargets(QueryVoteTargetsRequest) returns (QueryVoteTargetsResponse) {
        option(google.api.http).get = "/oracle/v1/VoteTargets";
    }
    rpc TobinTax(QueryTobinTaxRequest) returns (QueryTobinTaxResponse) {
        option(google.api.http).get = "/oracle/v1/TobinTax";
    }
    rpc TobinTaxes(QueryTobinTaxesRequest) returns (QueryTobinTaxesResponse) {
        option(google.api.http).get = "/oracle/v1/TobinTaxes";
    }
}

message QueryExchangeRateRequest {
    string denom = 1;
}
message QueryExchangeRateResponse {}

message QueryExchangeRatesRequest {}
message QueryExchangeRatesResponse {}

message QueryActivesRequest {}
message QueryActivesResponse {}

message QueryVotesRequest {
    string voter = 1;
    string denom = 2;
}
message QueryVotesResponse {}

message QueryPrevotesRequest {
    string voter = 1;
    string denom = 2;
}
message QueryPrevotesResponse {}

message QueryParametersRequest {}
message QueryParametersResponse {}

message QueryFeederDelegationRequest {
    string validator = 1;
}
message QueryFeederDelegationResponse {}

message QueryMissCounterRequest {
    string validator = 1;
}
message QueryMissCounterResponse {}

message QueryAggregatePrevoteRequest {
    string validator = 1;
}
message QueryAggregatePrevoteResponse {}

message QueryAggregateVoteRequest {
    string validator = 1;
}
message QueryAggregateVoteResponse {}

message QueryVoteTargetsRequest {}
message QueryVoteTargetsResponse {}

message QueryTobinTaxRequest {
    string denom = 1;
}
message QueryTobinTaxResponse {}

message QueryTobinTaxesRequest {}
message QueryTobinTaxesResponse {}
